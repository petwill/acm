
二分图如果是没有权值的，求最大匹配。则是用匈牙利算法求最大匹配。
如果带了权值，求最大或者最小权匹配，则必须用KM算法。
其实最大和最小权匹配都是一样的问题。只要会求最大匹配，
如果要求最小权匹配，则将权值取相反数，再把结果取相反数，那么最小权匹配就求出来了。


二分图最佳匹配 （kuhn munkras 算法 O(m*m*n)).
邻接矩阵形式 。  返回最佳匹配值，传入二分图大小m,n
邻接矩阵 mat ，表示权，match1,match2返回一个最佳匹配,为匹配顶点的match值为-1，
一定注意m<=n，否则循环无法终止，最小权匹配可将全职取相反数。
初始化：  for(i=0;i<MAXN;i++)
             for(j=0;j<MAXN;j++) 
                 mat[i][j]=-inf;
对于存在的边：
  mat[i][j]=val; //最大權 => 注意不能负值 

